<mw:ModernWindow x:Class="Win11Style.Showcase.MainWindow"
                 xmlns:mw="clr-namespace:Win11Style.WindowChrome;assembly=Win11Style"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:th="clr-namespace:Win11Style.Themes;assembly=Win11Style"
                 xmlns:local="clr-namespace:Win11Style.Showcase"
                 mc:Ignorable="d" 
                 NonActiveGlowColor="#3F3F3F"
                 WindowState="Normal"
                 WindowStyle="SingleBorderWindow"
                 TitleBarHeight="25"
                 CenterTitle="{Binding ElementName=CompactTitleBar, Path=IsChecked}"                 
                 Title="Modern Windows 11 Styles" Height="450" Width="800">
    <mw:ModernWindow.Style>
        <Style TargetType="mw:ModernWindow">
            <Setter Property="TitleBarBackground" Value="#FFFFFF"/>
            <Setter Property="TitleBarForeground" Value="#000000"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DarkMode, Path=IsChecked}" Value="true">
                    <Setter Property="TitleBarBackground" Value="#202020"/>
                    <Setter Property="TitleBarForeground" Value="#FFFFFF"/>
                    <Setter Property="ButtonHoverColor" Value="#525252"/>
                    <Setter Property="ButtonPressedColor" Value="#3E3E40"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=DarkMode, Path=IsChecked}" Value="false"/>
                        <Condition Binding="{Binding ElementName=Win11Style, Path=IsChecked}" Value="false"/>
                        <Condition Binding="{Binding ElementName=CompactTitleBar, Path=IsChecked}" Value="false"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsActive}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ActiveTitleBarMatchGlow" Value="True"/>
                    <Setter Property="TitleBarForeground" Value="#FFFFFF"/>
                    <Setter Property="ButtonHoverColor" Value="#10FFFFFF"/>
                    <Setter Property="ButtonPressedColor" Value="#09FFFFFF"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=DarkMode, Path=IsChecked}" Value="false"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsActive}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="TitleBarForeground" Value="#999999"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </mw:ModernWindow.Style>
    <Grid>
        <Menu VerticalAlignment="Top" th:DynamicStyle.BaseStyle="{DynamicResource {x:Type Menu}}">
            <th:DynamicStyle.DerivedStyle>
                <Style TargetType="Menu">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=CompactTitleBar, Path=IsChecked}" Value="true">
                            <Setter Property="Margin" Value="26,-22,0,0"/>
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=mw:ModernWindow, Mode=FindAncestor}, Path=TitleBarBackground}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </th:DynamicStyle.DerivedStyle>
            <MenuItem Header="File">
                <MenuItem Header="New" InputGestureText="Ctrl+N"/>
                <MenuItem Header="Open">
                    <MenuItem.Icon>
                        <Image Source="/Resources/Open-icon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Print"/>
                <MenuItem Header="Checked" IsCheckable="True" IsChecked="True"/>
                <MenuItem Header="Sub Menu">
                    <MenuItem Header="Item1" IsEnabled="False"/>
                    <MenuItem Header="Item2" IsCheckable="True" IsChecked="True"/>
                    <Separator/>
                    <MenuItem Header="Item3">
                        <MenuItem.Icon>
                            <Image Source="/Resources/Open-icon.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Exit"/>
            </MenuItem>
            <MenuItem Header="Edit"/>
            <MenuItem Header="Appearance">
                <MenuItem Header="Dark Mode" IsCheckable="True" IsChecked="{Binding ElementName=DarkMode, Path=IsChecked}"/>
                <MenuItem Header="Win 11 Style" IsCheckable="True" IsChecked="{Binding ElementName=Win11Style, Path=IsChecked}"/>
                <MenuItem x:Name="CompactTitleBar" Header="Compact Titlebar" IsCheckable="True"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Help"/>
                <MenuItem Header="Help"/>
                <MenuItem Header="Help"/>
                <MenuItem Header="Help" IsEnabled="False"/>
                <MenuItem Header="Help"/>
                <MenuItem Header="Help"/>
            </MenuItem>

        </Menu>
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=CompactTitleBar, Path=IsChecked}" Value="false">
                            <Setter Property="Margin" Value="0,18,0,0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <CheckBox x:Name="DarkMode" Content="Dark Mode" HorizontalAlignment="Left" Margin="10,10,0,0"  VerticalAlignment="Top" Checked="DarkMode_Checked" Unchecked="DarkMode_UnChecked" IsChecked="False"/>
            <CheckBox x:Name="Win11Style" Content="Win 11 Style" HorizontalAlignment="Left" Margin="10,30,0,0" VerticalAlignment="Top" Checked="Win11_Checked" Unchecked="Win11_Unchecked" IsChecked="True"/>
            <CheckBox Content="Test" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive, Mode=OneWay}"/>
            <CheckBox Content="Disabled" HorizontalAlignment="Left" Margin="10,70,0,0" VerticalAlignment="Top" IsEnabled="False"/>
            <CheckBox Content="Disabled Checked" HorizontalAlignment="Left" Margin="10,70,0,0" VerticalAlignment="Top" IsEnabled="False" IsChecked="True"/>
            <CheckBox Content="Disabled Checked" HorizontalAlignment="Left" Margin="10,90,0,0" VerticalAlignment="Top" IsEnabled="True" IsChecked="{x:Null}"/>
            <Button Content="Button" IsDefault="False" HorizontalAlignment="Left" Margin="219,18,0,0" VerticalAlignment="Top" Padding="5,3" Click="Button_Click"/>
            <Button Content="Button" IsDefault="True" HorizontalAlignment="Left" Margin="219,48,0,0" VerticalAlignment="Top" Padding="5,3"/>
            <Button Content="Button Disabled" HorizontalAlignment="Left" Margin="219,78,0,0" Padding="5,3" VerticalAlignment="Top" IsEnabled="False"/>
            <ScrollBar HorizontalAlignment="Left" Margin="355,12,0,0" VerticalAlignment="Top" Height="154" Maximum="10" Value="2"  ViewportSize="6"/>
            <ScrollBar HorizontalAlignment="Left" Margin="176,114,0,0" VerticalAlignment="Top" Maximum="10" Value="2"  ViewportSize="6" Width="165" Orientation="Horizontal"/>
            <ScrollViewer HorizontalAlignment="Left" VerticalAlignment="Top" Height="150" Width="150" Margin="400,12,0,0" HorizontalScrollBarVisibility="Auto">
                <Grid Width="300" Height="300"/>
            </ScrollViewer>
            <TextBox HorizontalAlignment="Left" Margin="10,110,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="120"/>
            <TextBox HorizontalAlignment="Left" Margin="10,135,0,0" TextWrapping="Wrap" Text="TextBox Disabled" IsEnabled="False" VerticalAlignment="Top" Width="120"/>
            <ComboBox HorizontalAlignment="Left" Margin="10,167,0,0" VerticalAlignment="Top" Width="150" SelectedIndex="0">
                <ComboBoxItem Content="ComboBoxItem"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
            </ComboBox>
            <ComboBox HorizontalAlignment="Left" Margin="10,197,0,0" VerticalAlignment="Top" Width="150" SelectedIndex="0" IsEditable="True">
                <ComboBoxItem Content="ComboBox Editable"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
            </ComboBox>
            <ComboBox HorizontalAlignment="Left" Margin="10,227,0,0" VerticalAlignment="Top" Width="150" SelectedIndex="0" IsEditable="True" IsEnabled="False">
                <ComboBoxItem Content="ComboBox Editable Disabled"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
            </ComboBox>
            <ComboBox HorizontalAlignment="Left" Margin="10,257,0,0" VerticalAlignment="Top" Width="150" SelectedIndex="0" IsEditable="False" IsEnabled="False">
                <ComboBoxItem Content="ComboBox Disabled"/>
                <ComboBoxItem Content="ComboBoxItem1"/>
                <ComboBoxItem Content="ComboBoxItem2"/>
            </ComboBox>
            <GroupBox Header="GroupBox" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="88" Margin="175,180,0,0">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="5">
                        <RadioButton HorizontalAlignment="Left" VerticalAlignment="Top" Content="Option 1" IsChecked="true"/>
                        <RadioButton HorizontalAlignment="Left" VerticalAlignment="Top" Content="Option 2" IsChecked="{x:Null}"/>
                        <RadioButton HorizontalAlignment="Left" VerticalAlignment="Top" Content="Option 3"/>
                    </StackPanel>
                    <StackPanel Margin="5">
                        <RadioButton HorizontalAlignment="Left" VerticalAlignment="Top" Content="Option 1" IsChecked="True" IsEnabled="False"/>
                        <RadioButton HorizontalAlignment="Left" VerticalAlignment="Top" Content="Option 2" IsChecked="{x:Null}" IsEnabled="False"/>
                        <RadioButton HorizontalAlignment="Left" VerticalAlignment="Top" Content="Option 3" IsEnabled="False"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <PasswordBox HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Margin="400,12,0,0"/>
            <ProgressBar HorizontalAlignment="Left" Height="18" Margin="400,38,0,0" VerticalAlignment="Top" Width="127" IsIndeterminate="True"/>
            <ProgressBar HorizontalAlignment="Left" Height="18" Margin="400,67,0,0" VerticalAlignment="Top" Width="127" Value="50"/>
            <RichTextBox HorizontalAlignment="Left" VerticalAlignment="Center" Width="100" Height="46" Margin="359,0,0,0">
                <FlowDocument>
                    <Paragraph>
                        <Run Text="RichTextBox"/>
                        <LineBreak/>
                        <Hyperlink NavigateUri="https://google.com" IsEnabled="True" >This is a Link</Hyperlink>
                        <LineBreak/>
                        <Run Text="Test" Foreground="Red" FontWeight="Bold"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run Text="Test" Foreground="Red" FontWeight="Bold"/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
            <RichTextBox HorizontalAlignment="Left" VerticalAlignment="Center" Width="100" Height="46" Margin="469,0,0,0" IsEnabled="False">
                <FlowDocument>
                    <Paragraph>
                        <Run Text="RichTextBox"/>
                        <LineBreak/>
                        <Hyperlink NavigateUri="https://google.com" >This is a Link</Hyperlink>
                        <LineBreak/>
                        <Run Text="Test" Foreground="Red" FontWeight="Bold"/>
                        <LineBreak/>
                        <LineBreak/>
                        <Run Text="Test" Foreground="Red" FontWeight="Bold"/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
            <TabControl HorizontalAlignment="Left" VerticalAlignment="Top" Width="278" Height="104" Margin="10,303,0,0" TabStripPlacement="Top">
                <TabItem Header="Item 1">
                    <Grid Background="{DynamicResource WindowBackgroundBrush}"/>
                </TabItem>
                <TabItem Header="Item 2">
                    <Grid Background="#FFE5E5E5"/>
                </TabItem>
                <TabItem Header="Item 2" IsEnabled="False">
                    <Grid Background="#FFE5E5E5"/>
                </TabItem>
            </TabControl>

        </Grid>
    </Grid>
</mw:ModernWindow>
