<UserControl x:Class="Win11Style.WindowChrome.TitleBar"
             xmlns:controlzEx="urn:controlzex"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Win11Style.WindowChrome"
             mc:Ignorable="d"
             Background="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow, Mode=FindAncestor}, Path=TitleBarBackground}" 
             Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow, Mode=FindAncestor}, Path=TitleBarForeground}"
             Height="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow, Mode=FindAncestor}, Path=TitleBarHeight}"
             d:DesignHeight="45" d:DesignWidth="800">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="ResizeModeEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type ResizeMode}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="ResizeMode" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="WindowStyleEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type WindowStyle}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="WindowStyle" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="CornerPreferenceEnumValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type controlzEx:WindowCornerPreference}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="controlzEx:WindowCornerPreference" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <!--Base style for title bar buttons-->
        <Style x:Key="CaptionButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="Transparent" Width="44">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="8" 
                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow,Mode=FindAncestor}, Path=TitleBarForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="controlzEx:NonClientControlProperties.IsNCMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow, Mode=FindAncestor}, Path=ButtonHoverColor}"/>
                            </Trigger>
                            <Trigger Property="controlzEx:NonClientControlProperties.IsNCPressed" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow, Mode=FindAncestor}, Path=ButtonPressedColor, FallbackValue=#3E3E40}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Minimize-->
        <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE921;"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=WindowStyle}" Value="ToolWindow">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=ResizeMode}" Value="NoResize">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>

        </Style>

        <!--RestoreOrMaximize-->
        <Style x:Key="RestoreOrMaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE922;"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=WindowState}" Value="Maximized">
                    <Setter Property="Content" Value="&#xE923;"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=WindowStyle}" Value="ToolWindow">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=ResizeMode}" Value="NoResize">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=ResizeMode}" Value="CanMinimize">
                    <Setter Property="Opacity" Value="0.25"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--Close-->
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
            <Setter Property="Content" Value="&#xE8BB;"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="LayoutRoot" Background="Transparent" Width="44">
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="8" 
                                   FontWeight="Bold"
                                   Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:TitleBar,Mode=FindAncestor}, Path=Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=WindowStyle}" Value="ToolWindow">
                                <Setter TargetName="LayoutRoot" Property="Width" Value="18"/>
                                <Setter TargetName="LayoutRoot" Property="Height" Value="18"/>
                                <Setter TargetName="txt" Property="FontSize" Value="6"/>
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#C75050"/>
                                <Setter TargetName="LayoutRoot" Property="Margin" Value="0,6,1,0"/>
                                <Setter TargetName="LayoutRoot" Property="VerticalAlignment" Value="Top"/>
                                <Setter TargetName="txt" Property="Foreground" Value="White"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=IsActive}" Value="false"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=WindowStyle}" Value="ToolWindow"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#50C75050"/>
                                <Setter TargetName="txt" Property="Foreground" Value="#DDDDDD"/>
                            </MultiDataTrigger>
                            <Trigger Property="controlzEx:NonClientControlProperties.IsNCMouseOver" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#E81123"/>
                                <Setter TargetName="txt" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="controlzEx:NonClientControlProperties.IsNCPressed" Value="True">
                                <Setter TargetName="LayoutRoot" Property="Background" Value="#F1707A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Grid.Row="0"
          controlzEx:WindowChrome.IsHitTestVisibleInChrome="False"
          controlzEx:NonClientControlProperties.HitTestResult="CAPTION"
          MouseLeftButtonDown="TitleBarGrid_OnMouseLeftButtonDown"
          MouseRightButtonUp="TitleBarGrid_OnMouseRightButtonUp">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Path=Background}"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="true"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ModernWindow}}, Path=ActiveTitleBarMatchGlow}" Value="true"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controlzEx:WindowChromeWindow}}, Path=GlowColor}"/>
                            </Setter.Value>
                        </Setter>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <!--Default Height-->
        <Border Height="25" Visibility="Hidden"/>
        <!--App icon-->
        <Image Width="18" Margin="6,2,2,2" HorizontalAlignment="Left" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Source" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}" Value="{x:Null}">
                            <Setter Property="Source" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=AppIcon}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowStyle}" Value="ToolWindow">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow}, Path=CenterTitle}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" IsHitTestVisible="False">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Margin" Value="4,0,0,0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow}, Path=CenterTitle}" Value="true">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <!--App icon-->
            <Image Width="18" Margin="2" HorizontalAlignment="Left" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}" Value="{x:Null}">
                                <Setter Property="Source" Value="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=AppIcon}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowStyle}" Value="ToolWindow">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ModernWindow}, Path=CenterTitle}" Value="true">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}, Path=Title, FallbackValue=Window Title}" 
                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:TitleBar,Mode=FindAncestor}, Path=Foreground, FallbackValue=White}" Margin="2,0,0,0" VerticalAlignment="Center"/>
        </StackPanel>

        <!--Caption buttons-->

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
            <Button x:Name="MinimizeButton" Style="{StaticResource MinimizeButtonStyle}"
                        IsEnabled="{Binding IsEnabled, ElementName=MinimizeButton}"
                        Click="MinimizeButton_Click"
                        controlzEx:NonClientControlProperties.HitTestResult="MINBUTTON"
                        controlzEx:NonClientControlProperties.ClickStrategy="AutomationPeer"/>
            <Button x:Name="RestoreOrMaximizeButton" Style="{StaticResource RestoreOrMaximizeButtonStyle}"
                            IsEnabled="{Binding IsEnabled, ElementName=RestoreOrMaximizeButton}"
                            Click="RestoreOrMaximizeButton_Click"
                            controlzEx:NonClientControlProperties.HitTestResult="MAXBUTTON"
                            controlzEx:NonClientControlProperties.ClickStrategy="AutomationPeer" />
            <Button Style="{StaticResource CloseButtonStyle}" ToolTip="Close"
                            Click="CloseButton_Click"
                            controlzEx:NonClientControlProperties.HitTestResult="CLOSE"
                            controlzEx:NonClientControlProperties.ClickStrategy="AutomationPeer" />
        </StackPanel>
    </Grid>
</UserControl>
